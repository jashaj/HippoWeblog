<?xml version="1.0" encoding="UTF-8"?>  
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"   
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
    xsi:schemaLocation="http://java.sun.com/xml/ns/javaee  
    http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

    <display-name>Hippo Site Toolkit Container Web Application</display-name>

    <!-- Spring Log4j Web Configuration Init Parameters -->
    <context-param>
        <param-name>log4jConfigLocation</param-name>
        <param-value>classpath:log4j.properties</param-value>
    </context-param>

    <context-param>
        <param-name>log4jRefreshInterval</param-name>
        <param-value>60000</param-value>
    </context-param>

    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>site.webapp.root</param-value>
    </context-param>

    <filter>
        <filter-name>CharacterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    
     <filter> 
    <filter-name>AuthFilter</filter-name>
    <filter-class>org.onehippo.forge.authfilter.BasicAuthenticationFilter</filter-class>
    <!-- The realm to use for the http basic auth -->
    <init-param>
      <param-name>realm</param-name>
      <param-value>Site preview</param-value>
    </init-param>
    <!-- The authenticator policy, either any or all. For successful authentication
            either any or all requirements must be met. -->
    <init-param>
      <param-name>authenticatorPolicy</param-name>
      <param-value>any</param-value>
    </init-param>
    
    <!-- List of regular expressions of ips and host to deny access -->
    <init-param>
      <param-name>deny</param-name>
      <param-value>notallowed\.com,notallowed\.net</param-value>
    </init-param>
    <!-- List of regular expressions of ips and host to allow access -->
    <init-param>
      <param-name>allow</param-name>
      <param-value>127\.0\.0\.1,192\.168\.1,office\.mycompany\.com</param-value>
    </init-param>
    
    <init-param>
    <!-- the time a succesful authentication is cached in milliseconds. 
         Set to -1 to disable. -->
      <param-name>cache-period</param-name>
      <param-value>120000</param-value>
    </init-param>
    <!-- The path that is used for checking the privileges -->
    <init-param>
      <param-name>check-path</param-name>
      <param-value>/content/documents</param-value>
    </init-param>
    <!-- Comma separated list of privileges of which the user has to have at least one, 
         set to an empty string to disable checking for roles -->
    <init-param>
      <param-name>check-privileges</param-name>
      <param-value>hippo:author</param-value>
    </init-param>

     <init-param>
         <param-name>repository-address</param-name>
         <param-value>rmi://127.0.0.1:1099/hipporepository</param-value>
     </init-param>

  </filter>
    
    
    <filter>
        <filter-name>HstVirtualHostsFilter</filter-name>
        <filter-class>org.hippoecm.hst.container.HstVirtualHostsFilter</filter-class>   
        <init-param>
            <param-name>welcome-page</param-name>
            <param-value>home</param-value>
        </init-param>
        <init-param>
            <param-name>preview-prefix</param-name>
            <param-value>/preview</param-value>
        </init-param>
    </filter>
    
    <filter-mapping>
      <filter-name>AuthFilter</filter-name>
      <url-pattern>/preview/*</url-pattern>
    </filter-mapping>
    
    <filter-mapping>
        <filter-name>CharacterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>

    <filter-mapping>
        <filter-name>HstVirtualHostsFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
    </filter-mapping>
    
    <!-- Spring Log4j Configuring Listener -->
    <listener>
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
    </listener>

    <servlet>
        <servlet-name>HstSiteConfigServlet</servlet-name>
        <servlet-class>org.hippoecm.hst.site.container.HstSiteConfigServlet</servlet-class>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>HstContainerServlet</servlet-name>
        <servlet-class>org.hippoecm.hst.container.HstContainerServlet</servlet-class>
        <!--
        HST Application Context Namespace Prefix.
        This should be unique among multiple HST-based application contexts.
        -->
        <!--
        <init-param>
          <param-name>hstContextNamespace</param-name>
          <param-value>news</param-value>
        </init-param>
        -->
        <!--
        HST-2 based SITE application can define and assemble its own components by uncommenting the following two init parameters 
        and set the spring configuration files properly. The spring configuration resources are loaded by the context classloader.
        -->
        
        <init-param>
          <param-name>clientComponentManagerClass</param-name>
          <param-value>org.hippoecm.hst.component.support.ClientComponentManager</param-value>
        </init-param>
        <init-param>
          <param-name>clientComponentManagerConfigurations</param-name>
          <param-value>/META-INF/client-assembly/*.xml</param-value>
        </init-param>
        
        <load-on-startup>2</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>BinariesServlet</servlet-name>
        <servlet-class>org.hippoecm.hst.servlet.BinariesServlet</servlet-class>
    </servlet>
  
    <servlet>
        <servlet-name>StaticResourceServlet</servlet-name>
        <servlet-class>org.hippoecm.hst.servlet.StaticResourceServlet</servlet-class>
        <init-param>
            <param-name>forbiddenStaticResourcePathPrefixes</param-name>
            <param-value>
                /WEB-INF/, /META-INF/
            </param-value>
        </init-param>
        <init-param>
            <param-name>forbiddenStaticResourcePathPostfixes</param-name>
            <param-value>
                .jsp, .ftl, .vm
            </param-value>
        </init-param>
        <init-param>
            <param-name>allowedStaticResourcePathPrefixes</param-name>
            <param-value>
            </param-value>
        </init-param>
        <init-param>
            <param-name>allowedStaticResourcePathPostfixes</param-name>
            <param-value>
                 .gif, .jpg, .jpeg, .png, .ico, .js, .css
            </param-value>
        </init-param>
        <init-param>
            <param-name>useFileMappedBuffer</param-name>
            <param-value>false</param-value>
        </init-param>  
        
    </servlet>
    
    <servlet>
        <servlet-name>YUIResourceServlet</servlet-name>
        <servlet-class>org.springframework.js.resource.ResourceServlet</servlet-class>
        <init-param>
            <param-name>jarPathPrefix</param-name>
            <param-value>/org/onehippo/yui/inc/2.6.0</param-value>
        </init-param>
    </servlet>

  <servlet>
      <servlet-name>freemarker</servlet-name>
      <servlet-class>freemarker.ext.servlet.FreemarkerServlet</servlet-class>
      <!--<servlet-class>org.hippoecm.hst.servlet.HstFreemarkerServlet</servlet-class>-->

      <!-- FreemarkerServlet settings: -->
      <init-param>
        <param-name>TemplatePath</param-name>
        <param-value>/</param-value>
      </init-param>
      <init-param>
        <param-name>NoCache</param-name>
        <param-value>true</param-value>
      </init-param>
      <init-param>
        <param-name>ContentType</param-name>
        <param-value>text/html; charset=UTF-8</param-value> <!-- Forces UTF-8 output encoding! -->
      </init-param>
      <!-- FreeMarker settings: -->
      <init-param>
        <param-name>template_update_delay</param-name>
        <param-value>0</param-value> <!-- 0 is for development only! Use higher value otherwise. -->
      </init-param>
      <init-param>
        <param-name>default_encoding</param-name>
        <param-value>ISO-8859-1</param-value> <!-- The encoding of the template files. -->
      </init-param>
      <init-param>
        <param-name>number_format</param-name>
        <param-value>0.##########</param-value>
      </init-param>
      <load-on-startup>200</load-on-startup>
  </servlet>

    
    <servlet>
        <servlet-name>DojoResourceServlet</servlet-name>
        <servlet-class>org.springframework.js.resource.ResourceServlet</servlet-class>
    </servlet>
    
    <servlet-mapping>
        <servlet-name>HstContainerServlet</servlet-name>
        <url-pattern>/preview/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>HstContainerServlet</servlet-name>
        <url-pattern>/live/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>BinariesServlet</servlet-name>
        <url-pattern>/binaries/*</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>
        <servlet-name>StaticResourceServlet</servlet-name>
        <url-pattern>/staticresource/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>YUIResourceServlet</servlet-name>
        <url-pattern>/javascript/yui/*</url-pattern>
    </servlet-mapping>
    
    <servlet-mapping>
        <servlet-name>DojoResourceServlet</servlet-name>
        <url-pattern>/javascript/dojo/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
      <servlet-name>freemarker</servlet-name>
      <url-pattern>*.ftl</url-pattern>
    </servlet-mapping>
    
    <!-- The Usual Welcome File List -->
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>

    <error-page>
        <error-code>404</error-code>
        <location>/WEB-INF/jsp/errorpages/ErrorPage404.jsp</location>
    </error-page>
  
    <error-page>
        <error-code>500</error-code>
        <location>/WEB-INF/jsp/errorpages/ErrorPage500.jsp</location>
    </error-page>
  
    <error-page>
        <exception-type>org.hippoecm.hst.core.container.ContainerNotFoundException</exception-type>
        <location>/WEB-INF/jsp/errorpages/ErrorPage404.jsp</location>
    </error-page>
  
    <error-page>
        <exception-type>java.io.FileNotFoundException</exception-type>
        <location>/WEB-INF/jsp/errorpages/ErrorPage404.jsp</location>
    </error-page>
  
    <error-page>
        <exception-type>org.hippoecm.hst.core.container.ContainerException</exception-type>
        <location>/WEB-INF/jsp/errorpages/ErrorPage500.jsp</location>
    </error-page>
  
    <error-page>
        <exception-type>Exception</exception-type>
        <location>/WEB-INF/jsp/errorpages/ErrorPage500.jsp</location>
    </error-page>

    <jsp-config>
        <!-- This taglib definition is required if you want to use JSP taglibs in freemarker templates. -->
        <taglib>
            <taglib-uri>http://www.hippoecm.org/jsp/hst/core</taglib-uri>
            <taglib-location>/WEB-INF/hst-core.tld</taglib-location>
        </taglib>
    </jsp-config>
    <!-- If you want to use a pooling JCR repository from JNDI, uncomment the following and configure the correct jndiName. -->
    <!--
    <resource-ref>
        <description>JCR Session Pooling Repository provided by HST-2 Core Components</description>
        <res-ref-name>jcr/repository</res-ref-name>
        <res-type>javax.jcr.Repository</res-type>
        <res-auth>Container</res-auth>
    </resource-ref>
    -->
    
</web-app>

